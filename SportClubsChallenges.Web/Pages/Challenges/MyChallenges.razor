@using System.Security.Claims
@using Microsoft.AspNetCore.Http

@inject IChallengeService challengeService
@inject IIdentityService identityService
@inject IHttpContextAccessor httpContextAccessor

@attribute [Authorize]

@if (challengeParticipations == null)
{
    <Loading />
}
else
{
    <RadzenPanel AllowCollapse="true">
        <HeaderTemplate>
            <span style="float:left;">
                <RadzenIcon Icon="stars" /><b style="font-size:18px">My challenges</b>
            </span>
        </HeaderTemplate>
        <ChildContent>

            @if (challengeParticipations.Count == 0)
            {
                <p>You are not registered to any challenge!</p>
                <br />
                <p>Please go <a class="btn btn-primary" href="/challenges/list">Challenges</a> page to join to any challenge from your Strava club.</p>
            }
            else
            {
                // TODO: move all styles to css
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@challengeParticipations" TItem="ChallengeParticipationDto">
                    <Template Context="participation">
                        <RadzenCard Style="width: 350px; background-color: #f7f1ec6e;">
                            <a href="/challenges/rank/@participation.ChallengeId" class="link-unstyled">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div>Name:</div>
                                        <b>@participation.ChallengeName</b>
                                        <div style="margin-top:10px">Club:</div>
                                        <b>@participation.ClubName</b>
                                        <br />
                                        @if (!string.IsNullOrEmpty(participation.ClubIconUrl))
                                        {
                                            <RadzenImage Path="@participation.ClubIconUrl" Style="width:75px;" />
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <div>Current Rank:</div>
                                        <b>@participation.Rank / @participation.ChallengeParticipantsCount</b>
                                        <div style="margin-top:10px">Score:</div>
                                        <b>@participation.Score @participation.ScoreUnit</b>
                                        <div style="margin-top:10px">Date Range:</div>
                                        <b>@participation.ChallengeStartDate.ToShortDateString() - @participation.ChallengeEndDate.ToShortDateString()</b>
                                    </div>
                                </div>
                            </a>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
            }
        </ChildContent>
    </RadzenPanel>
}

@code {

    List<ChallengeParticipationDto> challengeParticipations;

    protected override async Task OnInitializedAsync()
    {
        var user = httpContextAccessor.HttpContext.User;
        var athleteId = identityService.GetAthleteIdFromIdentity(user.Identity as ClaimsIdentity);

        challengeParticipations = await challengeService.GetChallengeParticipations(athleteId);
    }
}
