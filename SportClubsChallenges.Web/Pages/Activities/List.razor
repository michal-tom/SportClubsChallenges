@page "/activities/list"

@using System.Security.Claims
@using Microsoft.AspNetCore.Http

@inject IActivityService activityService
@inject IIdentityService identityService
@inject IHttpContextAccessor httpContextAccessor

@attribute [Authorize]

@if (activitiesModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenGrid Data="@activitiesModel" TItem="ActivityDto"
                AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                AllowPaging="true" PageSize="10" AllowSorting="true"
                AllowColumnResize="true">
        <Columns>
            <RadzenGridColumn TItem="ActivityDto" Property="Name" Title="Name" >
                <Template Context="activity">
                    <a href="@activity.Link" target="_blank" >
                        <img src="/images/strava_icon.svg" style="height:16px;">
                    </a> @activity.Name
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ActivityDto" Property="ActivityType" Title="Type" Width="100px" />
            <RadzenGridColumn TItem="ActivityDto" Title="Date" Property="StartDate" Width="150px">
                <Template Context="activity">
                    @activity.StartDate.ToShortDateString() @activity.StartDate.ToShortTimeString()
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ActivityDto" Title="Time" Property="Time" Width="120px" />
            <RadzenGridColumn TItem="ActivityDto" Title="Distance (km)" Property="DistanceKm" Width="120px" />
            <RadzenGridColumn TItem="ActivityDto" Title="Elevation (m)" Property="Elevation" Width="120px" />
        </Columns>
    </RadzenGrid>
}

@code {

    List<ActivityDto> activitiesModel;

    protected override async Task OnInitializedAsync()
    {
        var user = httpContextAccessor.HttpContext.User;
        var athleteId = identityService.GetAthleteIdFromIdentity(user.Identity as ClaimsIdentity);

        activitiesModel = await activityService.GetAthleteActivities(athleteId);
    }
}