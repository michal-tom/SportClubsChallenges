@page "/challenges"

@inject IChallengeService challengeService

<div>
    <a class="btn btn-primary" href='/addChallenge'>Add new challenge</a>
</div>
<br />

@if (challengesModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th class="sort-th">
                    Id
                </th>
                <th class="sort-th">
                    Name
                </th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (challengesModel == null || challengesModel.Count == 0)
            {
                <tr>
                    <td colspan="3">
                        No Records to display
                    </td>
                </tr>
            }
            else
            {
                foreach (var challenge in challengesModel)
                {
                    <tr>
                        <td>@challenge.Id</td>
                        <td>@challenge.Name</td>
                        <td>
                            <a class="btn btn-primary" href='/editArticle/@challenge.Id'>Edit</a>  |
                            <a class="btn btn-danger" @onclick="() => DeleteChallenge(challenge.Id)">Delete</a>
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
}

@code {

    List<ChallengeDto> challengesModel;

    protected override async Task OnInitializedAsync()
    {
        challengesModel = await challengeService.GetAllChallenges();
    }

    protected async Task DeleteChallenge(long id)
    {
        await challengeService.DeleteChallenge(id);
        challengesModel = await challengeService.GetAllChallenges();
    }
}
