@page "/clubs/admin"

@inject IClubService clubService
@inject NavigationManager navigationManager

@attribute [Authorize(Roles = "Admin")]

@if (clubs == null)
{
    <Loading />
}
else
{
    <Datagrid TRowData="ClubDto" Items="clubs" Placeholder="We couldn't find any clubs!">
        <DatagridColumn TRowData="ClubDto" Title="Id" Field="c => c.Id" CanSort="true" CanFilter="true" />
        <DatagridColumn TRowData="ClubDto" Title="Name" Field="c => c.Name" CanSort="true" CanFilter="true">
            <StravaIconLink Name="@context.Name" Url="@context.StravaUrl"></StravaIconLink>
        </DatagridColumn>
        <DatagridColumn TRowData="ClubDto" Title="SportType" Field="c => c.SportType" CanSort="true" CanFilter="true" />
        <DatagridColumn TRowData="ClubDto" Title="Owner" Field="c => c.Owner" CanSort="true" CanFilter="true" />
        <DatagridColumn TRowData="ClubDto" Title="Members in Strava" Field="c => c.MembersCount" CanSort="true" CanFilter="true" />
        <DatagridColumn TRowData="ClubDto" Title="Actions">
            <ButtonGroup Variant="Primary">
                <Button Variant="Success" OnClick="() => ShowDetails(context.Id)">Details</Button>
                <Button OnClick="() => EditClub(context.Id)">Edit</Button>
            </ButtonGroup>
        </DatagridColumn>
        <DatagridFooter TRowData="ClubDto">
            <DatagridFooterDescription TRowData="ClubDto">@clubs.Count club(s)</DatagridFooterDescription>
        </DatagridFooter>
    </Datagrid>
}

@code {
    List<ClubDto> clubs;

    protected override async Task OnInitializedAsync()
    {
        clubs = await clubService.GetAllClubs();
    }

    protected void EditClub(long clubId)
    {
        navigationManager.NavigateTo($"/clubs/edit/{clubId}");
    }

    protected void ShowDetails(long clubId)
    {
        navigationManager.NavigateTo($"/clubs/details/{clubId}");
    }
}
