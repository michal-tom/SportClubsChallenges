@page "/clubs/details/{clubId}"

@inject IClubService clubService

@if (clubData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenTabs>
        <Tabs>
            <RadzenTabsItem Text="Info">
                <RadzenCard>
                    <div class="row">
                        <div class="col-md-6">
                            <div>Name:</div>
                            <b>@clubData.Name</b>
                            <br />
                            <a href="@clubData.StravaUrl" target="_blank" class="link-unstyled">
                                <RadzenImage Path="@clubData.IconUrl" />
                            </a>
                            <div style="margin-top:20px">Sport:</div>
                            <b>@clubData.SportType</b>
                            @if (!string.IsNullOrEmpty(clubData.Owner))
                            {
                                <div style="margin-top:20px">Owner:</div>
                                <b>@clubData.Owner</b>
                            }
                            <div style="margin-top:20px">Members count:</div>
                            <b>@(clubData.MembersCount)</b>
                        </div>
                    </div>
                </RadzenCard>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Members">
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@clubMembers" TItem="AthleteDto">
                    <Template Context="member" >
                        <RadzenCard Style="width:100%;">
                            <div class="row">
                                <div class="col-md-1">
                                    @{
                                        var index = @clubMembers.IndexOf(member) + 1;
                                    }
                                    @(index).
                                </div>
                                <div class="col-md-2">
                                    <RadzenImage Path="@member.IconUrl" Style="width:50px;" />
                                </div>
                                <div class="col-md-9">
                                    <b>@member.Name</b>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Challenges">
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@clubChallenges" TItem="ChallengeOverviewDto">
                    <Template Context="challenge">
                        <RadzenCard Style="width:100%;">
                            <div class="row">
                                <div class="col-md-4">
                                    <b>@challenge.Name</b>
                                </div>
                                <div class="col-md-4">
                                    <span>@challenge.StartDate.ToShortDateString() - @challenge.EndDate.ToShortDateString()</span>
                                </div>
                                <div class="col-md-4">
                                    <span>@challenge.ParticipantsCount participant(s)</span>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
}

@code {

    [Parameter]
    public string ClubId { get; set; }

    ClubDto clubData;

    List<AthleteDto> clubMembers;

    List<ChallengeOverviewDto> clubChallenges;

    protected override async Task OnInitializedAsync()
    {
        if (this.ClubId == null || !long.TryParse(this.ClubId, out long clubId))
        {
            return;
        }

        clubData = await clubService.GetClub(clubId);
        clubMembers = await clubService.GetMembers(clubId);
        clubChallenges = await clubService.GetChallenges(clubId);
    }
}