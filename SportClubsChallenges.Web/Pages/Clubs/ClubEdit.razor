@page "/clubs/edit/{clubId:long}"

@using System.Security.Claims
@using Microsoft.AspNetCore.Http

@inject IClubService clubService
@inject NavigationManager navigationManager
@inject IIdentityService identityService
@inject IHttpContextAccessor httpContextAccessor

@attribute [Authorize(Roles = "Admin")]

@if (club == null)
{
    <Loading />
}
else
{
    <h4>Edit club @club?.Name</h4>

    <Form Model="@club" TItem="ClubDto" Layout="FormLayout.Compact" OnValidSubmit="() => EditClub()">
        <div class="clr-row">
            <div class="clr-col-md-12">
                <Text @bind-Value="club.Name" Label="Name" HelpText="Enter club name" ValidationFor="() => club.Name" Disabled="true" />

                <Text @bind-Value="club.SportType" Label="Sport type" HelpText="Enter club sport type" ValidationFor="() => club.SportType" Disabled="true" />

                <Text @bind-Value="club.Owner" Label="Owner" HelpText="Enter club owner" ValidationFor="() => club.Owner" />

                <Text @bind-Value="club.Url" Label="Url suffix" HelpText="Enter club url suffix address in Strava" ValidationFor="() => club.Url" />

                <Number @bind-Value="club.MembersCount" Label="Members count" HelpText="Enter club members count in Strava" ValidationFor="() => club.MembersCount" />
            </div>
        </div>
        <div class="row justify-content-center">
            <Button Variant="Primary" type="submit">Submit</Button>
            <Button Variant="Warning" type="reset" OnClick="() => Cancel()">Cancel</Button>
        </div>
    </Form>
}
@code {

    [Parameter]
    public long ClubId { get; set; }

    ClubDto club;

    protected override async Task OnInitializedAsync()
    {
        club = await clubService.GetClub(this.ClubId);
    }

    protected async Task EditClub()
    {
        var user = httpContextAccessor.HttpContext.User;
        var athleteId = identityService.GetAthleteIdFromIdentity(user.Identity as ClaimsIdentity);

        await clubService.EditClub(club);
        navigationManager.NavigateTo("/clubs/admin");
    }

    void Cancel()
    {
        navigationManager.NavigateTo("/clubs/admin");
    }
}